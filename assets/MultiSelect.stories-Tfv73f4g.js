import{j as e}from"./jsx-runtime-DQ32znRX.js";import{B as w,w as I,d as M}from"./main-CIqX26RN.js";import{D as j}from"./Dropdown.ui-CsrUYQE2.js";import{r as u}from"./index-DH5ua8nC.js";import"./Checkbox.ui-DBB274MM.js";import"./Toggle.ui-U11mp1PH.js";import"./_commonjsHelpers-Cpj98o6Y.js";const C="_root_1jvyl_1",D="_placeholder_1jvyl_6",N="_mainIcon_1jvyl_14",O="_dropdown_1jvyl_18",b="_open_1jvyl_23",q="_list_1jvyl_27",k="_card_1jvyl_47",r={root:C,placeholder:D,mainIcon:N,dropdown:O,open:b,list:q,card:k},_=({options:l,isOpen:a,value:n,changeSelectValue:c,removeItem:i})=>e.jsx("article",{className:`${r.dropdown} ${a&&r.open}`,children:e.jsx("div",{className:r.list,children:l.map(t=>n.find(({value:d})=>d===t.value)?e.jsx(j,{placeholder:t.label,value:t.value,onClick:()=>i(t.value),active:!0,isSuccess:!0},t.value):e.jsx(j,{placeholder:t.label,value:t.value,onClick:()=>c(t)},t.value))})});try{_.displayName="DropdownMultiSelect",_.__docgenInfo={description:"",displayName:"DropdownMultiSelect",props:{options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"SelectOptions[]"}},isOpen:{defaultValue:null,description:"",name:"isOpen",required:!0,type:{name:"boolean"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"SelectOptions[]"}},changeSelectValue:{defaultValue:null,description:"",name:"changeSelectValue",required:!0,type:{name:"(selectValue: SelectOptions) => void"}},removeItem:{defaultValue:null,description:"",name:"removeItem",required:!0,type:{name:"(removeValue: string) => void"}}}}}catch{}const h=({cardValue:l,removeItem:a})=>e.jsxs("div",{className:r.card,children:[l.label,e.jsx("div",{onClick:()=>a(l.value),children:e.jsx(w,{width:12,height:12,color:"gray"})})]});try{h.displayName="CardMultiSelect",h.__docgenInfo={description:"",displayName:"CardMultiSelect",props:{cardValue:{defaultValue:null,description:"",name:"cardValue",required:!0,type:{name:"SelectOptions"}},removeItem:{defaultValue:null,description:"",name:"removeItem",required:!0,type:{name:"(removeValue: string) => void"}}}}}catch{}const E=(l,a,n)=>{const[c,i]=u.useState(!1),t=u.useCallback(()=>{i(o=>!o)},[]),d=o=>{l([...a,o])},v=o=>{l(a.filter(({value:p})=>p!==o))},s=u.useCallback(()=>{l([])},[]);return u.useEffect(()=>{l([])},[]),u.useEffect(()=>{n&&l([])},[n]),{isOpenDropDown:c,openDropdown:t,changeSelectValue:d,value:a,removeValue:v,deleteAllValue:s}},y=({placeholder:l,options:a,onChangeValue:n,allDeleted:c,selectedItems:i,...t})=>{const{isOpenDropDown:d,openDropdown:v,value:s,changeSelectValue:o,removeValue:p,deleteAllValue:x}=E(n,i,c);return e.jsx(e.Fragment,{children:e.jsxs("article",{className:r.root,...t,"data-testid":"multiSelect",onClick:v,children:[e.jsxs("div",{"data-testid":"click-to-open-dropdown",children:[e.jsx("div",{className:r.placeholder,children:s.length>0?s.map(f=>e.jsx(h,{cardValue:f,removeItem:p},f.value)):e.jsx("span",{children:l})}),s.length?e.jsx("div",{className:r.mainIcon,onClick:x,children:e.jsx(I,{width:15,height:15,color:"white"})}):e.jsx("div",{className:r.mainIcon,children:e.jsx(M,{width:15,height:15,color:"white"})})]}),e.jsx(_,{isOpen:d,options:a,value:s,changeSelectValue:o,removeItem:p})]})})};try{y.displayName="MultiSelect",y.__docgenInfo={description:"",displayName:"MultiSelect",props:{placeholder:{defaultValue:null,description:"",name:"placeholder",required:!1,type:{name:"ReactNode"}},selectedItems:{defaultValue:null,description:"",name:"selectedItems",required:!0,type:{name:"SelectOptions[]"}},options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"SelectOptions[]"}},onChangeValue:{defaultValue:null,description:"",name:"onChangeValue",required:!0,type:{name:"(val: SelectOptions[]) => void"}},allDeleted:{defaultValue:null,description:"",name:"allDeleted",required:!1,type:{name:"boolean"}}}}}catch{}const T={title:"Design System/Atoms/Multi Select",component:y,tags:["autodocs"],argTypes:{placeholder:{defaultValue:"Placeholder",description:"Placeholder in the select"},options:{description:`Array options in the render to dropdown. Example object in array:
         <pre>
        {
          label: string,
          value: string
        }
         </pre>
        `}}},m={args:{placeholder:"Click Me",selectedItems:[],onChangeValue:()=>{},options:[{label:"Me",value:"Me"},{label:"You",value:"You"}]}};var g,S,V;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  args: {
    placeholder: 'Click Me',
    selectedItems: [],
    onChangeValue: () => {},
    options: [{
      label: 'Me',
      value: 'Me'
    }, {
      label: 'You',
      value: 'You'
    }]
  }
}`,...(V=(S=m.parameters)==null?void 0:S.docs)==null?void 0:V.source}}};const z=["Basic"];export{m as Basic,z as __namedExportsOrder,T as default};
